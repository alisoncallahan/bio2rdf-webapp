# bio2rdf sourceforge subversion copy Id ($Id: base-bio2rdf-queries-config.n3 977 2011-02-28 06:21:00Z p_ansell $)

<http://bio2rdf.org/query:dummyuniversalfilterquery> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "This query is designed to be used as a dummy, no communication query to provider filtering on entire results pools." ;
	<http://purl.org/queryall/query:includeDefaults> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^(.*)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> .

<http://bio2rdf.org/query:catchalldefault> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "Catch all default query definition. Do not enable this unless you want it to match everything." ;
	<http://purl.org/queryall/query:includeDefaults> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_normalisedStandardUri}\"><ns0pred:seeAlso xmlns:ns0pred=\"http://www.w3.org/2000/01/rdf-schema#\">${xmlEncoded_endpointUrl}</ns0pred:seeAlso></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:includeThenExclude> .

<http://bio2rdf.org/query:fasta> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "fasta" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^fasta/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}fasta/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedStandardUri}\"><ns0pred:fastaUrl xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedQueryUri}</ns0pred:fastaUrl></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:constructtwolevel> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "constructtwolevel" ;
    <http://www.w3.org/2000/01/rdf-schema#comment> "Provides a CONSTRUCT query that allows either one or two levels of introspection into the RDF structure." ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> ?p ?o . ?o ?p2 ?o2 . } WHERE { ${graphStart} <${inputUrlEncoded_endpointSpecificUri}> ?p ?o . OPTIONAL { ?o ?p2 ?o2 . } ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:construct> .

<http://bio2rdf.org/query:xmlfromlowercase> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "xmlfromlowercase" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^xml/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}xml/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedStandardUri}\"><ns0pred:xmlUrl xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedQueryUri}</ns0pred:xmlUrl></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:linksbynamespace> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "linksns" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^linksns/([\\w-]+)/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { ?s ?p <${inputUrlEncoded_normalisedStandardUri}> . ?s a ?linkedRecordType . ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . ?s <http://purl.org/dc/elements/1.1/title> ?title . ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . } WHERE {  ${graphStart}  ?s ?p <${inputUrlEncoded_endpointSpecificUri}> . OPTIONAL { ?s a ?linkedRecordType . } OPTIONAL { ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . } OPTIONAL { ?s <http://purl.org/dc/elements/1.1/title> ?title . } OPTIONAL { ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . } ${graphEnd}  } ${limit} ${sparqlOffset}" ; 
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}linksns/${input_1}/${input_2}:${input_3}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_2}:${input_3}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:xNamespaceLinks xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/><ns0pred:xCountLinks xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${defaultHostAddress}links/${xmlEncoded_urlEncoded_input_2}:${xmlEncoded_urlEncoded_input_3}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> , "2"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:fulllinksbynamespace> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "fulllinksns" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^fulllinksns/([\\w-]+)/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { ?s ?p <${inputUrlEncoded_normalisedStandardUri}> . ?s ?p2 ?o . } WHERE {  ${graphStart}  ?s ?p <${inputUrlEncoded_endpointSpecificUri}> . OPTIONAL { ?s ?p2 ?o . } ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}fulllinksns/${input_1}/${input_2}:${input_3}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_2}:${input_3}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:xNamespaceLinks xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/><ns0pred:xCountLinks xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${defaultHostAddress}links/${xmlEncoded_urlEncoded_input_2}:${xmlEncoded_urlEncoded_input_3}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> , "2"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:provenancebykey> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "provenancebykey" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^provenancebykey/(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { ?s <http://purl.org/queryall/provenance:elementKey> <${inputUrlEncoded_normalisedStandardUri}> . ?s ?p2 ?o . } WHERE {  ${graphStart}  ?s ?p <${inputUrlEncoded_endpointSpecificUri}> . OPTIONAL { ?s ?p2 ?o . } ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}provenancebykey/${input_1}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:hasProvenanceRecords xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/><ns0pred:xCountLinks xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${defaultHostAddress}links/${xmlEncoded_urlEncoded_input_2}:${xmlEncoded_urlEncoded_input_3}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> .

<http://bio2rdf.org/query:unsafelinksbynamespace> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "unsafelinksbynamespace" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^linksns/([\\w-]+)/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { ?s ?p <${ntriplesEncoded_normalisedStandardUri}> . ?s a ?linkedRecordType . ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . ?s <http://purl.org/dc/elements/1.1/title> ?title . ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . } WHERE {  ${graphStart}  ?s ?p <${ntriplesEncoded_endpointSpecificUri}> . OPTIONAL { ?s a ?linkedRecordType . } OPTIONAL { ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . } OPTIONAL { ?s <http://purl.org/dc/elements/1.1/title> ?title . } OPTIONAL { ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . } ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}linksns/${input_1}/${input_2}:${input_3}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_2}:${input_3}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:xNamespaceLinks xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/><ns0pred:xCountLinks xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${defaultHostAddress}links/${xmlEncoded_urlEncoded_input_2}:${xmlEncoded_urlEncoded_input_3}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> , "2"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:plusurlencodedlinksbynamespace> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "plusurlencodedlinksbynamespace" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^linksns/([\\w-]+)/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { ?s ?p <${inputPlusUrlEncoded_normalisedStandardUri}> . ?s a ?linkedRecordType . ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . ?s <http://purl.org/dc/elements/1.1/title> ?title . ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . } WHERE {  ${graphStart}  ?s ?p <${inputPlusUrlEncoded_endpointSpecificUri}> . OPTIONAL { ?s a ?linkedRecordType . } OPTIONAL { ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . } OPTIONAL { ?s <http://purl.org/dc/elements/1.1/title> ?title . } OPTIONAL { ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . } ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}linksns/${input_1}/${input_2}:${input_3}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_2}:${input_3}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:xNamespaceLinks xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/><ns0pred:xCountLinks xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${defaultHostAddress}links/${xmlEncoded_urlEncoded_input_2}:${xmlEncoded_urlEncoded_input_3}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> , "2"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:unsafeprimaryreverseconstruct> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "unsafeprimaryreverseconstruct" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> <http://bio2rdf.org/bio2rdf_resource:linkedToFrom> ?s . } WHERE { ${graphStart} ?s ?p <${ntriplesEncoded_endpointSpecificUri}> . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:unsafeconstruct> .

<http://bio2rdf.org/query:unsafesecondaryreverseconstruct> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "unsafesecondaryreverseconstruct" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${normalisedStandardUri}> <http://bio2rdf.org/bio2rdf_resource:linkedToFrom> ?s . } WHERE { ${graphStart} ?s ?p <${ntriplesEncoded_endpointSpecificUri}> . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:unsafeconstruct> .

<http://bio2rdf.org/query:plusurlencodedprimaryreverseconstruct> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "plusurlencodedprimaryreverseconstruct" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputPlusUrlEncoded_normalisedStandardUri}> <http://bio2rdf.org/bio2rdf_resource:linkedToFrom> ?s . } WHERE { ${graphStart} ?s ?p <${inputPlusUrlEncoded_endpointSpecificUri}> . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:plusurlencodedconstruct> .

<http://bio2rdf.org/query:plusurlencodedsecondaryreverseconstruct> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "plusurlencodedsecondaryreverseconstruct" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${normalisedStandardUri}> <http://bio2rdf.org/bio2rdf_resource:linkedToFrom> ?s . } WHERE { ${graphStart} ?s ?p <${ntriplesEncoded_endpointSpecificUri}> . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:plusurlencodedconstruct> .

<http://bio2rdf.org/query:namespacebytype> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "typens" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^typens/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { ?s <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <${normalisedStandardUri}> . ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . ?s <http://purl.org/dc/elements/1.1/title> ?title . ?s <http://bio2rdf.org/ns/go#name> ?goName . ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . } WHERE { ${graphStart} ?s <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <${endpointSpecificUri}> . OPTIONAL { ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . } OPTIONAL { ?s <http://purl.org/dc/elements/1.1/title> ?title . } OPTIONAL { ?s <http://bio2rdf.org/ns/go#name> ?goName . } OPTIONAL { ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . } ${graphEnd} } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}typens/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:data> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "data" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^data/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}data/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:urlData xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_inputUrlEncoded_normalisedQueryUri}</ns0pred:urlData></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:construct> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "construct" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> ?p ?o . } WHERE { ${graphStart} <${inputUrlEncoded_endpointSpecificUri}> ?p ?o . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_endpointSpecificUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:construct> .

<http://bio2rdf.org/query:constructdnsonly> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "constructdnsonly" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^dnsonly/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> ?p ?o . } WHERE { ${graphStart} <${inputUrlEncoded_endpointSpecificUri}> ?p ?o . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:construct> .

<http://bio2rdf.org/query:primaryreverseconstructfromdrugbankinchikey> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "primaryreverseconstructfromdrugbankinchikey" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> <http://bio2rdf.org/bio2rdf_resource:linkedToFrom> ?s . ?s ?p ?o} WHERE { ${graphStart} ?s <http://www4.wiwiss.fu-berlin.de/drugbank/resource/drugbank/inchiKey> \"${urlEncoded_input_2}\" . ?s ?p ?o . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_endpointSpecificUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:inchikey> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:primaryreverseconstructfromdrugbankinchikey> .

# TODO: FIXME: make this work for ATC codes and the prefix/suffix information about them found in wikipedia
<http://bio2rdf.org/query:primaryreverseconstructfromdbpediaatctwopart> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "primaryreverseconstructfromdbpediaatc" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):([A-Z][A-Z]?[0-9]?[0-9]?[A-Z]?[A-Z]?[0-9]?[0-9]?)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> <http://bio2rdf.org/bio2rdf_resource:linkedToFrom> ?s . ?s ?p ?o} WHERE { ${graphStart} ?s <http://www4.wiwiss.fu-berlin.de/drugbank/resource/drugbank/inchiKey> \"${urlEncoded_input_2}\" . ?s ?p ?o . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_endpointSpecificUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:atc> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:primaryreverseconstructfromdrugbankinchikey> .

<http://bio2rdf.org/query:primaryreverseconstructfromblueobeliskinchikey> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "primaryreverseconstructfromblueobeliskinchikey" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> <http://bio2rdf.org/bio2rdf_resource:linkedToFrom> ?s . ?s ?p ?o} WHERE { ${graphStart} ?s <http://www.blueobelisk.org/chemistryblogs/inchikey> ?inchikey . FILTER(REGEX(?inchikey, \"${urlEncoded_input_2}\")) . ?s ?p ?o . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_endpointSpecificUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:inchikey> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:primaryreverseconstructfromblueobeliskinchikey> .

<http://bio2rdf.org/query:primaryreverseconstructfromblueobeliskinchi> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "primaryreverseconstructfromblueobeliskinchi" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> <http://bio2rdf.org/bio2rdf_resource:linkedToFrom> ?s . ?s ?p ?o} WHERE { ${graphStart} ?s <http://www.blueobelisk.org/chemistryblogs/inchi> \"InChI=${plusUrlEncoded_input_2}\" . ?s ?p ?o . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${plusUrlEncoded_input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_endpointSpecificUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:inchi> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:primaryreverseconstructfromblueobeliskinchi> .

<http://bio2rdf.org/query:primaryreverseconstructfromiupacinchi> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "primaryreverseconstructfromiupacinchi" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> <http://bio2rdf.org/bio2rdf_resource:linkedToFrom> ?s . ?s ?p ?o} WHERE { ${graphStart} ?s <http://www.iupac.org/inchi> \"InChI=${plusUrlEncoded_input_2}\" . ?s ?p ?o . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${plusUrlEncoded_input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_endpointSpecificUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:inchi> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:primaryreverseconstructfromiupacinchi> .

<http://bio2rdf.org/query:spectrumfrominchi> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "spectrumfrominchi" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^spectrumfrominchi/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> <http://www.blueobelisk.org/chemistryblogs/inchi> \"InChI=${plusUrlEncoded_input_2}\" . ?s <http://www.blueobelisk.org/chemistryblogs/inchi> \"InChI=${plusUrlEncoded_input_2}\" . ?s <http://www.nmrshiftdb.org/onto#hasSpectrum> ?spectrum . ?spectrum ?p ?o} WHERE { ${graphStart} ?s <http://www.blueobelisk.org/chemistryblogs/inchi> \"InChI=${plusUrlEncoded_input_2}\" . ?s <http://www.nmrshiftdb.org/onto#hasSpectrum> ?spectrum . ?spectrum ?p ?o . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}spectrumfrominchi/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_endpointSpecificUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:inchi> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:spectrumfrominchi> .

<http://bio2rdf.org/query:spectrumfrominchikey> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "spectrumfrominchikey" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^spectrumfrominchikey/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> <http://www.blueobelisk.org/chemistryblogs/inchikey> ?inchikey. ?s <http://www.blueobelisk.org/chemistryblogs/inchikey> ?inchikey . ?s <http://www.nmrshiftdb.org/onto#hasSpectrum> ?spectrum . ?spectrum ?p ?o} WHERE { ${graphStart} ?s <http://www.blueobelisk.org/chemistryblogs/inchikey> ?inchikey . FILTER(REGEX(?inchikey, \"${plusUrlEncoded_input_2}\")) . ?s <http://www.nmrshiftdb.org/onto#hasSpectrum> ?spectrum . ?spectrum ?p ?o . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}spectrumfrominchi/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_endpointSpecificUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:inchikey> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:spectrumfrominchikey> .

<http://bio2rdf.org/query:linksfromnmrshiftdbspectrumtype> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "linksfromnmrshiftdbspectrumtype" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> <http://bio2rdf.org/bio2rdf_resource:linkedToFrom> ?s . } WHERE { ${graphStart} ?s <http://www.nmrshiftdb.org/onto#spectrumType> ?spectrumtype . FILTER(REGEX(?spectrumtype, \"${urlEncoded_input_2}\")) . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_endpointSpecificUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:nmrshiftdb_spectrumtype> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:linksfromnmrshiftdbspectrumtype> .

<http://bio2rdf.org/query:genbankinsertions> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "genbankinsertions" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:genbank> , <http://bio2rdf.org/ns:gi> , <http://bio2rdf.org/ns:ncbi> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:asn1> , <http://bio2rdf.org/query:fasta> , <http://bio2rdf.org/query:genbankpartial> , <http://bio2rdf.org/query:genbankfull> , <http://bio2rdf.org/query:xmlfromlowercase> , <http://bio2rdf.org/query:imagefromlowercase> , <http://bio2rdf.org/query:relatedfromlowercase> .

<http://bio2rdf.org/query:nsinterlinksbetweentypes> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "namespacetypeinternallinks" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^namespacetypeinternallinks/([\\w-]+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedQueryUri}> <http://bio2rdf.org/bio2rdf_resource:hasNamespaceTypeInternalLinkCountResult> <${defaultHostAddress}namespacetypeinternallinksresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_1}> . <${defaultHostAddress}namespacetypeinternallinksresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_1}> <http://bio2rdf.org/bio2rdf_resource:sparqlEndpointUrl> <${endpointUrl}> .  <${defaultHostAddress}namespacetypeinternallinksresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_1}> <http://bio2rdf.org/bio2rdf_resource:linksFromNamespace> <${inputUrlEncoded_normalisedStandardUri}> .  <${defaultHostAddress}namespacetypeinternallinksresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_1}> <http://bio2rdf.org/bio2rdf_resource:sparqlGraphUri> \"${graphUri}\" .  <${defaultHostAddress}namespacetypeinternallinksresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_1}> <http://bio2rdf.org/bio2rdf_resource:hasLinkCount> `(SELECT DISTINCT ?origintype ?endtype COUNT(?s2) AS ?linkcount WHERE { ${graphStart} ?s ?p ?o . ?s a ?origintype . ?s2 ?p2 ?s . ?s2 a ?endtype . ${graphEnd} })` } where { ?s1 ?p1 ?o1 } limit 1" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}namespacetypeinternallinks/${urlEncoded_input_1}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}ns:${urlEncoded_input_1}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:xNamespaceTypeInternalLinks xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:includeThenExclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:namespacecount> , <http://bio2rdf.org/query:namespaceuricount> .

<http://bio2rdf.org/query:imagefromlowercase> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "imagefromlowercase" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^image/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}image/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedStandardUri}\"><ns0pred:urlImage xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedQueryUri}</ns0pred:urlImage></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:constructnodefaults> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "constructnodefaults" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^constructnodefaults/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> ?p ?o . } WHERE { ${graphStart} <${inputUrlEncoded_endpointSpecificUri}> ?p ?o . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}constructnodefaults/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:construct> .

<http://bio2rdf.org/query:labelsearch> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "label" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^label/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${normalisedStandardUri}> <http://www.w3.org/2000/01/rdf-schema#label> ?label . <${normalisedStandardUri}> <http://purl.org/dc/elements/1.1/title> ?title . <${normalisedStandardUri}> <http://purl.uniprot.org/core/title> ?uniprotTitle .  <${endpointSpecificUri}> <http://purl.org/dc/terms/title> ?dctermstitle . <${normalisedStandardUri}> <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . } WHERE { ${graphStart} OPTIONAL { <${endpointSpecificUri}> <http://www.w3.org/2000/01/rdf-schema#label> ?label . } OPTIONAL { <${endpointSpecificUri}> <http://purl.org/dc/elements/1.1/title> ?title . } OPTIONAL { <${endpointSpecificUri}> <http://purl.uniprot.org/core/title> ?uniprotTitle }  OPTIONAL{ <${endpointSpecificUri}> <http://purl.org/dc/terms/title> ?dctermstitle . } OPTIONAL { <${endpointSpecificUri}> <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . } ${graphEnd} } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}label/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:hasLabelSearch xmlns:ns0pred=\"${xmlEncoded_defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:biopaxxrefresolution> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "biopaxxrefresolution" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
    <http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:cpath> , <http://bio2rdf.org/ns:reactome> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${normalisedStandardUri}> <http://bio2rdf.org/ns/biopax:XREF> ?xref . ?xref ?xrefpredicate ?xrefobject . <${normalisedStandardUri}> <http://bio2rdf.org/bio2rdf_resource:xRef> ?xrefrealuri . } WHERE { ${graphStart} <${endpointSpecificUri}> <http://bio2rdf.org/ns/biopax#XREF> ?xref . ?xref ?xrefpredicate ?xrefobject . OPTIONAL { ?xref <http://bio2rdf.org/ns/bio2rdf#xRef> ?xrefrealuri . } ${graphEnd} } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}label/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:hasLabelSearch xmlns:ns0pred=\"${xmlEncoded_defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:biopaxxrefreverselinksbynamespace> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "biopaxxrefreverselinksbynamespace" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
    <http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:cpath> , <http://bio2rdf.org/ns:reactome> , <http://bio2rdf.org/ns:biopax> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^linksns/([\\w-]+)/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { ?refuri <http://bio2rdf.org/ns/biopax#XREF> ?xref . ?refuri ?refpredicate ?refobject . ?xref ?xrefpredicate ?xrefobject . ?xref <http://bio2rdf.org/ns/bio2rdf#xRef> <${normalisedStandardUri}> . } WHERE { ${graphStart} ?refuri <http://bio2rdf.org/ns/biopax#XREF> ?xref . ?refuri ?refpredicate ?refobject . ?xref ?xrefpredicate ?xrefobject . ?xref <http://bio2rdf.org/ns/bio2rdf#xRef> <${endpointSpecificUri}> .  ${graphEnd} } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}linksns/${input_1}/${input_2}${defaultSeparator}${input_3}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_2}${defaultSeparator}${input_3}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:hasLabelSearch xmlns:ns0pred=\"${xmlEncoded_defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "2"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:counttriplesfromlowercase> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "counttriplesfromlowercase" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^counttriples/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_privateuppercase_normalisedQueryUri}> <http://bio2rdf.org/bio2rdf_resource:hasTripleCountResult> <${defaultHostAddress}tripleresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_1}:${urlEncoded_uppercase_input_2}> . <${defaultHostAddress}tripleresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_1}:${urlEncoded_uppercase_input_2}> <http://bio2rdf.org/bio2rdf_resource:sparqlEndpointUrl> <${endpointUrl}> .  <${defaultHostAddress}tripleresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_1}:${urlEncoded_uppercase_input_2}> <http://bio2rdf.org/bio2rdf_resource:sparqlGraphUri> \"${graphUri}\" . <${defaultHostAddress}tripleresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_1}:${urlEncoded_uppercase_input_2}> <http://bio2rdf.org/bio2rdf_resource:hasTripleCount> `(select (count(?o)) as ?countO where { ${graphStart} <${inputUrlEncoded_privatelowercase_endpointSpecificUri}> ?p ?o . ${graphEnd} })` } where { ?s1 ?p1 ?o1 } limit 1" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}counttriples/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedStandardUri}\"><ns0pred:xCountTriples xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedQueryUri}\"/><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_privatelowercase_endpointSpecificUri}\"/><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_privatelowercase_normalisedStandardUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:counttriplesfromlowercase> , <http://bio2rdf.org/query:constructfromlowercase> .

<http://bio2rdf.org/query:genbankfull> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "genbankfull" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^genbankfull/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}genbankfull/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedStandardUri}\"><ns0pred:genbankfullUrl xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedQueryUri}</ns0pred:genbankfullUrl></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:primaryreverseconstructfromlowercase> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "primaryreverseconstructfromlowercase" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_privateuppercase_normalisedStandardUri}> <http://bio2rdf.org/bio2rdf_resource:linkedToFrom> ?s . } WHERE { ${graphStart} ?s ?p <${inputUrlEncoded_privatelowercase_endpointSpecificUri}> . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:constructfromlowercase> .

<http://bio2rdf.org/query:prosite2golinks> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "prosite2golinks" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^links/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { ?goAnnotation <http://bio2rdf.org/go_resource:has_prosite_pattern> <${inputUrlEncoded_normalisedStandardUri}> .  } WHERE {  ${graphStart}   ?goAnnotation <http://www.geneontology.org/formats/oboInOwl#hasDbXref> ?o . ?o <http://www.geneontology.org/formats/oboInOwl#hasURI> \"${inputUrlEncoded_endpointSpecificUri}\"^^xsd:anyURI . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}links/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:prosite> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:unsafelinks> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "unsafelinks" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^links/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { ?s ?p <${normalisedStandardUri}> . ?s a ?linkedRecordType . ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . ?s <http://purl.org/dc/elements/1.1/title> ?title . ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . } WHERE {  ${graphStart}  ?s ?p <${endpointSpecificUri}> . OPTIONAL { ?s a ?linkedRecordType . } OPTIONAL { ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . } OPTIONAL { ?s <http://purl.org/dc/elements/1.1/title> ?title . } OPTIONAL { ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . } ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}links/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:xLinks xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:plusurlencodedlinks> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "plusurlencodedlinks" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^links/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { ?s ?p <${inputPlusUrlEncoded_normalisedStandardUri}> . ?s a ?linkedRecordType . ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . ?s <http://purl.org/dc/elements/1.1/title> ?title . ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . } WHERE {  ${graphStart}  ?s ?p <${inputPlusUrlEncoded_endpointSpecificUri}> . OPTIONAL { ?s a ?linkedRecordType . } OPTIONAL { ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . } OPTIONAL { ?s <http://purl.org/dc/elements/1.1/title> ?title . } OPTIONAL { ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . } ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}links/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputPlusUrlEncoded_normalisedStandardUri}\"><ns0pred:xLinks xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputPlusUrlEncoded_normalisedQueryUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:labelsearchforgo> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "golabel" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^label/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${normalisedStandardUri}> <http://bio2rdf.org/go_resource:name> ?goName . } WHERE { ${graphStart}  <${endpointSpecificUri}> <http://bio2rdf.org/ns/go#name> ?goName ${graphEnd} } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}label/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:hasLabelSearch xmlns:ns0pred=\"${xmlEncoded_defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:go> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:pubmedcentral> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "pubmedcentral" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^pubmedcentral/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}pubmedcentral/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:pubmedcentralUrl xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_inputUrlEncoded_normalisedQueryUri}</ns0pred:pubmedcentralUrl></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:pubmed> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:virtuosobifcontainssearch> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "virtuosobifcontainssearch" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^search/(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedQueryUri}> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://bio2rdf.org/bio2rdf_resource:SearchResults> . <${inputUrlEncoded_normalisedQueryUri}> <http://bio2rdf.org/bio2rdf_resource:hasSearchResult> ?s .  <${inputUrlEncoded_normalisedQueryUri}> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?s . ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . ?s <http://purl.org/dc/elements/1.1/title> ?title . ?s <http://purl.org/dc/terms/title> ?dctermstitle . ?s <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type . ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . ?s ?p ?o .  } WHERE { ${graphStart} ?s ?p ?o . FILTER(bif:contains(?o, '\"${ntriplesEncoded_input_1}\"')) OPTIONAL { ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . } OPTIONAL { ?s <http://purl.org/dc/elements/1.1/title> ?title . } OPTIONAL{ ?s <http://purl.org/dc/terms/title> ?dctermstitle . }  OPTIONAL{ ?s <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type . } OPTIONAL { ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . } ${graphEnd} } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}search/${input_1}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}search/${input_1}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:hasSearchResults xmlns:ns0pred=\"${xmlEncoded_defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> .

<http://bio2rdf.org/query:sparqlregexsearch> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "sparqlregexsearch" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^search/(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedQueryUri}> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://bio2rdf.org/bio2rdf_resource:SearchResults> . <${inputUrlEncoded_normalisedQueryUri}> <http://bio2rdf.org/bio2rdf_resource:hasSearchResult> ?s .  <${inputUrlEncoded_normalisedQueryUri}> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?s . ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . ?s <http://purl.org/dc/elements/1.1/title> ?title . ?s <http://purl.org/dc/terms/title> ?dctermstitle . ?s <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type . ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . ?s ?p ?o .  } WHERE { ${graphStart} ?s ?p ?o . FILTER(regex(str(?o), \"${ntriplesEncoded_input_1}\")) OPTIONAL { ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . } OPTIONAL { ?s <http://purl.org/dc/elements/1.1/title> ?title . }  OPTIONAL{ ?s <http://purl.org/dc/terms/title> ?dctermstitle . } OPTIONAL{ ?s <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type . } OPTIONAL { ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . } ${graphEnd} } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}search/${input_1}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}search/${input_1}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:hasSearchResults xmlns:ns0pred=\"${xmlEncoded_defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> .

<http://bio2rdf.org/query:rawrdf> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "rdf" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^rdf/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}rdf/${input_1}:${urlEncoded_input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}:${urlEncoded_input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:rawRdf xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:unsaferawrdf> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "rdf" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
    <http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:wikipedia> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^rdf/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}rdf/${input_1}:${urlEncoded_input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}:${urlEncoded_input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:rawRdf xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:xml> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "xml" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^xml/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}xml/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:xmlUrl xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_inputUrlEncoded_normalisedQueryUri}</ns0pred:xmlUrl></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:unknownnamespace> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "unknownnamespace" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^unknownnamespace/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}ns${defaultSeparator}${input_1}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:containsUnknownNamespaceForThisQuery xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/><rdf:type xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"http://bio2rdf.org/bio2rdf_resource:Error\"/><rdf:type xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"http://bio2rdf.org/bio2rdf_resource:UnknownNamespaceForThisQueryError\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:unknownnamespace> .

<http://bio2rdf.org/query:countlinksfromlowercase> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "countlinksfromlowercase" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^countlinks/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_privateuppercase_normalisedQueryUri}> <http://bio2rdf.org/bio2rdf_resource:hasLinkCountResult> <${defaultHostAddress}linkresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_1}:${urlEncoded_uppercase_input_2}> . <${defaultHostAddress}linkresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_1}:${urlEncoded_uppercase_input_2}> <http://bio2rdf.org/bio2rdf_resource:sparqlEndpointUrl> <${endpointUrl}> .  <${defaultHostAddress}linkresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_1}:${urlEncoded_uppercase_input_2}> <http://bio2rdf.org/bio2rdf_resource:sparqlGraphUri> \"${graphUri}\" . <${defaultHostAddress}linkresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_1}:${urlEncoded_uppercase_input_2}> <http://bio2rdf.org/bio2rdf_resource:hasLinkCount> `(select (count(?s)) as ?countS where { ${graphStart} ?s ?p <${inputUrlEncoded_privatelowercase_endpointSpecificUri}> . ${graphEnd} })` } where { ?s1 ?p1 ?o1 } limit 1" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}countlinks/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedStandardUri}\"><ns0pred:xCountLinks xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedQueryUri}\"/><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_privatelowercase_endpointSpecificUri}\"/><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_privatelowercase_normalisedStandardUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:countlinksfromlowercase> , <http://bio2rdf.org/query:constructfromlowercase> .

<http://bio2rdf.org/query:pubmedrefs> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "pubmedrefs" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^pubmedrefs/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}pubmedrefs/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedStandardUri}\"><ns0pred:pubmedrefsUrl xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedQueryUri}</ns0pred:pubmedrefsUrl></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:homologenelinks> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "homologenelinks" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^links/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { ?homologousGene <http://purl.org/science/owl/sciencecommons/has_homologous_gene_record>  <${inputUrlEncoded_normalisedStandardUri}>.  } WHERE {  ${graphStart}  ?s <http://purl.org/science/owl/sciencecommons/has_homologous_gene_record> <${inputUrlEncoded_endpointSpecificUri}> . ?s <http://purl.org/science/owl/sciencecommons/has_homologous_gene_record> ?homologousGene . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}links/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:geneid> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:image> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "image" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^image/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}image/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:urlImage xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_inputUrlEncoded_normalisedQueryUri}</ns0pred:urlImage></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:homologeneconstruct> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "homologeneconstruct" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> <http://purl.org/science/owl/sciencecommons/has_homologous_gene_record> ?homologousGene .  } WHERE {  ${graphStart}  ?s <http://purl.org/science/owl/sciencecommons/has_homologous_gene_record> <${inputUrlEncoded_endpointSpecificUri}> . ?s <http://purl.org/science/owl/sciencecommons/has_homologous_gene_record> ?homologousGene . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:geneid> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:ispy> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "ispy" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^ispy/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}ispy/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:ispyUrl xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_inputUrlEncoded_normalisedQueryUri}</ns0pred:ispyUrl></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:related> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "related" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^related/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}related/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:relatedItemsUrl xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_inputUrlEncoded_normalisedQueryUri}</ns0pred:relatedItemsUrl></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:proteinlinks> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "proteinlinks" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^proteinlinks/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { ?s ?p <${inputUrlEncoded_normalisedStandardUri}> . ?s a ?linkedRecordType . ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . ?s <http://purl.org/dc/elements/1.1/title> ?title . ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . } WHERE {  ${graphStart}  ?s ?p <${inputUrlEncoded_endpointSpecificUri}> . OPTIONAL { ?s a ?linkedRecordType . } OPTIONAL { ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . } OPTIONAL { ?s <http://purl.org/dc/elements/1.1/title> ?title . } OPTIONAL { ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . } ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}proteinlinks/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:xProteinLinks xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:hubmed> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "hubmed" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^hubmed/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}hubmed/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:hubmedUrl xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_inputUrlEncoded_normalisedQueryUri}</ns0pred:hubmedUrl></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:pubmed> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:goinprositeconstruct> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "goinprositeconstruct" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> <http://bio2rdf.org/go_resource:has_prosite_pattern> ?prositeReference .  } WHERE {  ${graphStart}  <${inputUrlEncoded_endpointSpecificUri}> <http://www.geneontology.org/formats/oboInOwl#hasDbXref> ?o . ?o <http://www.geneontology.org/formats/oboInOwl#hasURI>  ?prositeReference . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:go> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:unsafeconstruct> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "unsafeconstruct" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${normalisedStandardUri}> ?p ?o . } WHERE { ${graphStart} <${ntriplesEncoded_endpointSpecificUri}> ?p ?o . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_ntriplesEncoded_normalisedStandardUri}\"><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_ntriplesEncoded_endpointSpecificUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:unsafeconstruct> .

<http://bio2rdf.org/query:plusurlencodedconstruct> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "plusurlencodedconstruct" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputPlusUrlEncoded_normalisedStandardUri}> ?p ?o . } WHERE { ${graphStart} <${inputPlusUrlEncoded_endpointSpecificUri}> ?p ?o . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputPlusUrlEncoded_normalisedStandardUri}\"><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputPlusUrlEncoded_endpointSpecificUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:plusurlencodedconstruct> .

<http://bio2rdf.org/query:tags> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "tags" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^tags/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "PREFIX tags: <http://www.holygoat.co.uk/owl/redwood/0.1/tags/> PREFIX terms: <http://purl.org/net/terms#> CONSTRUCT { ?taggingInstance rdf:type terms:TermInstance . ?taggingInstance terms:taggedBy ?foafUser . ?taggingInstance terms:taggedOn ?taggedOn . ?taggingInstance terms:subject <${inputUrlEncoded_normalisedStandardUri}> . ?taggingInstance terms:predicate ?termPredicate . ?taggingInstance terms:object ?termObject . ?taggingInstance terms:term ?tagLabelUri . ?tagLabelUri tags:name ?tagLabelName . } WHERE { ${graphStart} ?taggingInstance rdf:type terms:TermInstance . ?taggingInstance terms:taggedBy ?foafUser . ?taggingInstance terms:taggedOn ?taggedOn .         ?taggingInstance terms:subject <${inputUrlEncoded_endpointSpecificUri}> . OPTIONAL{ ?taggingInstance terms:predicate ?termPredicate .} OPTIONAL{?taggingInstance terms:object ?termObject .} ?taggingInstance terms:term ?tagLabelUri . ?tagLabelUri tags:name ?tagLabelName . FILTER(sameTerm(?foafUser, <http://purl.org/net/terms#AnonymousUser>)) ${graphEnd} } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}tags/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:xTags xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:geneid> , <http://bio2rdf.org/ns:mquter_gene> , <http://bio2rdf.org/ns:go> , <http://bio2rdf.org/ns:keywords> , <http://bio2rdf.org/ns:term> , <http://bio2rdf.org/ns:terminstance> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:tags> .

<http://bio2rdf.org/query:goinprositelinks> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "goinprositelinks" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^links/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { ?prositeReference <http://bio2rdf.org/bio2rdf_resource:has_go_annotation> <${inputUrlEncoded_normalisedStandardUri}> .  } WHERE {  ${graphStart}  <${inputUrlEncoded_endpointSpecificUri}> <http://www.geneontology.org/formats/oboInOwl#hasDbXref> ?o . ?o <http://www.geneontology.org/formats/oboInOwl#hasURI> ?prositeReference . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:go> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:fulltext> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "fulltext" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^fulltext/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}fulltext/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedStandardUri}\"><ns0pred:fulltextUrl xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedQueryUri}</ns0pred:fulltextUrl></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:index> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "index" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^index/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}index/${input_1}:${urlEncoded_input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}:${urlEncoded_input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:countlinksbynamespace> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "countlinksns" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^countlinksns/([\\w-]+)/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedQueryUri}> <http://bio2rdf.org/bio2rdf_resource:hasNamespaceLinkCountResult> <${defaultHostAddress}linknsresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_2}:${urlEncoded_input_3}> . <${defaultHostAddress}linknsresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_2}:${urlEncoded_input_3}> <http://bio2rdf.org/bio2rdf_resource:sparqlEndpointUrl> <${endpointUrl}> .  <${defaultHostAddress}linknsresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_2}:${urlEncoded_input_3}> <http://bio2rdf.org/bio2rdf_resource:linksFromNamespace> <${defaultHostAddress}ns:${urlEncoded_input_1}> .  <${defaultHostAddress}linknsresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_2}:${urlEncoded_input_3}> <http://bio2rdf.org/bio2rdf_resource:sparqlGraphUri> \"${graphUri}\" .  <${defaultHostAddress}linknsresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_2}:${urlEncoded_input_3}> <http://bio2rdf.org/bio2rdf_resource:hasLinkCount> `(select (count(?s)) as ?countS where { ${graphStart} ?s ?p <${inputUrlEncoded_endpointSpecificUri}> . ${graphEnd} })` } where { ?s1 ?p1 ?o1 } limit 1" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}countlinksns/${input_1}/${input_2}:${input_3}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_2}:${input_3}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:xNamespaceCountLinks xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/><ns0pred:xCountLinks xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${defaultHostAddress}countlinks/${xmlEncoded_urlEncoded_input_2}:${xmlEncoded_urlEncoded_input_3}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> , "2"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:countlinksbynamespace> .

<http://bio2rdf.org/query:genbankpartial> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "genbankpartial" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^genbankpartial/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}genbankpartial/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedStandardUri}\"><ns0pred:genbankpartialUrl xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedQueryUri}</ns0pred:genbankpartialUrl></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:primaryreverseconstruct> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "primaryreverseconstruct" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> <http://bio2rdf.org/bio2rdf_resource:linkedToFrom> ?s . } WHERE { ${graphStart} ?s ?p <${inputUrlEncoded_endpointSpecificUri}> . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_endpointSpecificUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:primaryreverseconstruct> .

<http://bio2rdf.org/query:secondaryreverseconstruct> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "secondaryreverseconstruct" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> <http://bio2rdf.org/bio2rdf_resource:linkedToFrom> ?s . } WHERE { ${graphStart} ?s ?p <${inputUrlEncoded_endpointSpecificUri}> . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_endpointSpecificUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:secondaryreverseconstruct> .

<http://bio2rdf.org/query:namespacecount> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "namespacecount" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^namespacecount/([\\w-]+)" ;
	<http://purl.org/queryall/query:templateString> "SELECT (count(?s)) AS ?countS WHERE { ${graphStart} ?s ?p ?o . ${graphEnd} }" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}namespacecount/${urlEncoded_input_1}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}ns/${urlEncoded_input_1}#" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:xNamespaceSubjectUriCount xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:includeThenExclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:relatedfromlowercase> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "relatedfromlowercase" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^related/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}related/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedStandardUri}\"><ns0pred:relatedItems xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedQueryUri}</ns0pred:relatedItems></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:links> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "links" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^links/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { ?s ?p <${inputUrlEncoded_normalisedStandardUri}> . ?s a ?linkedRecordType . ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . ?s <http://purl.org/dc/elements/1.1/title> ?title . ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . } WHERE {  ${graphStart}  ?s ?p <${inputUrlEncoded_endpointSpecificUri}> . OPTIONAL { ?s a ?linkedRecordType . } OPTIONAL { ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . } OPTIONAL { ?s <http://purl.org/dc/elements/1.1/title> ?title . } OPTIONAL { ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . } ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}links/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:xLinks xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:primaryreverseconstructfrompubcheminchi> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "primaryreverseconstructfrompubcheminchi" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> <http://bio2rdf.org/bio2rdf_resource:linkedToFrom> ?s . ?s ?p ?o} WHERE { ${graphStart} ?s <${defaultHostAddress}ns/ns/ns/pubchem#InChI> \"InChI=${input_2}\" . ?s ?p ?o . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_endpointSpecificUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:inchi> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:primaryreverseconstructfrompubcheminchi> .

<http://bio2rdf.org/query:licensefromlowercase> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "licensefromlowercase" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^license/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}license/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedStandardUri}\"><ns0pred:rights xmlns:ns0pred=\"http://purl.org/dc/terms/\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedQueryUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:lsidresolution> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "lsidresolution" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^lsid/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "urn:lsid:bio2rdf.org:${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:xLsid xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/><ns0pred:xProxyLsid xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${defaultHostAddress}urn:lsid:bio2rdf.org:${xmlEncoded_urlEncoded_input_1}:${xmlEncoded_urlEncoded_input_2}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:lsidresolution> .

<http://bio2rdf.org/query:asn1> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "asn1" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^asn1/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}asn1/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedStandardUri}\"><ns0pred:asn1Url xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedQueryUri}</ns0pred:asn1Url></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:html> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "html" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^html/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}html/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:url xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_inputUrlEncoded_normalisedQueryUri}</ns0pred:url></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:unsafehtml> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "unsafe html" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^html/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}html/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_normalisedStandardUri}\"><ns0pred:url xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_normalisedQueryUri}</ns0pred:url></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:namespaceuricount> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "namespaceuricount" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^namespaceuricount/([\\w-]+)" ;
	<http://purl.org/queryall/query:templateString> "SELECT count(*) WHERE { ${graphStart} ?s ?p ?o . FILTER(isuri(?o)) ${graphEnd} }" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}namespaceuricount/${urlEncoded_input_1}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}ns/${urlEncoded_input_1}#" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:xNamespaceObjectUriCount xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:includeThenExclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:nsinterlinksbetweentypes> , <http://bio2rdf.org/query:namespacecount> , <http://bio2rdf.org/query:namespaceuricount> .

<http://bio2rdf.org/query:ihop> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "ihop" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^ihop/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}ihop/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:ihopUrl xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_inputUrlEncoded_normalisedQueryUri} </ns0pred:ihopUrl></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:pubmed> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:constructfromlowercase> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "constructfromlowercase" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_privateuppercase_normalisedStandardUri}> ?p ?o . } WHERE { ${graphStart} <${inputUrlEncoded_privatelowercase_endpointSpecificUri}> ?p ?o . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedStandardUri}\"><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_privatelowercase_endpointSpecificUri}\"/><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_privatelowercase_normalisedStandardUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:constructfromlowercase> .

<http://bio2rdf.org/query:countlinksbynamespacefromlowercase> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "countlinksnsfromlowercase" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^countlinksns/([\\w-]+)/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_privateuppercase_normalisedQueryUri}> <http://bio2rdf.org/bio2rdf_resource:hasNamespaceLinkCountResult> <${defaultHostAddress}linknsresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_2}:${urlEncoded_uppercase_input_3}> . <${defaultHostAddress}linknsresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_2}:${urlEncoded_uppercase_input_3}> <http://bio2rdf.org/bio2rdf_resource:sparqlEndpointUrl> <${endpointUrl}> .  <${defaultHostAddress}linknsresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_2}:${urlEncoded_uppercase_input_3}> <http://bio2rdf.org/bio2rdf_resource:linksFromNamespace> <${defaultHostAddress}ns:${urlEncoded_input_1}#> .  <${defaultHostAddress}linknsresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_2}:${urlEncoded_uppercase_input_3}> <http://bio2rdf.org/bio2rdf_resource:sparqlGraphUri> \"${graphUri}\" .  <${defaultHostAddress}linknsresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_2}:${urlEncoded_uppercase_input_3}> <http://bio2rdf.org/bio2rdf_resource:hasLinkCount> `(select (count(?s)) as ?countS where { ${graphStart} ?s ?p <${inputUrlEncoded_privatelowercase_endpointSpecificUri}> . ${graphEnd} })` } where { ?s1 ?p1 ?o1 } limit 1" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}countlinksns/${input_1}/${input_2}:${input_3}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_2}:${input_3}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedStandardUri}\"><ns0pred:xNamespaceCountLinks xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedQueryUri}\"/><ns0pred:xCountLinks xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${defaultHostAddress}countlinks/${xmlEncoded_urlEncoded_input_2}:${xmlEncoded_urlEncoded_uppercase_input_3}\"/><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_privatelowercase_endpointSpecificUri}\"/><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_privatelowercase_normalisedStandardUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> , "2"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:countlinksbynamespacefromlowercase> .

<http://bio2rdf.org/query:lsidproxyinsertion> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "lsidproxyinsertion" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^urn:lsid:bio2rdf.org:([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}urn:lsid:bio2rdf.org:${input_1}:${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}:${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:xProxyLsid xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:lsidproxyinsertion> .

<http://bio2rdf.org/query:linksfromlowercase> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "linksfromlowercase" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^links/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { ?s ?p <${inputUrlEncoded_privateuppercase_normalisedStandardUri}> . ?s a ?linkedRecordType . ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . ?s <http://purl.org/dc/elements/1.1/title> ?title . ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . } WHERE {  ${graphStart}  ?s ?p <${inputUrlEncoded_privatelowercase_endpointSpecificUri}> . OPTIONAL { ?s a ?linkedRecordType . } OPTIONAL { ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . } OPTIONAL { ?s <http://purl.org/dc/elements/1.1/title> ?title . } OPTIONAL { ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . }${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}links/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedStandardUri}\"><ns0pred:xLinks xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedQueryUri}\"/><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_privatelowercase_endpointSpecificUri}\"/><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_privatelowercase_normalisedStandardUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:unknownquery> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "unknownquery" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^unknownquery/(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${queryString}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${queryString}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:containsUnknownQuery xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/><rdf:type xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"http://bio2rdf.org/bio2rdf_resource:Error\"/><rdf:type xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"http://bio2rdf.org/bio2rdf_resource:UnknownQueryError\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "0"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "0"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:unknownquery> .

<http://bio2rdf.org/query:htmlfromlowercase> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "htmlfromlowercase" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^html/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}html/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedStandardUri}\"><ns0pred:url xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedQueryUri}</ns0pred:url></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:linkstonamespace> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "linkstonamespace" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^linkstonamespace/([\\w-]+)/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> ?p ?o . } WHERE { ${graphStart} <${inputUrlEncoded_endpointSpecificUri}> ?p ?o . FILTER ( isUri(?o) && regex( str(?o), \"${inputUrlEncoded_endpointSpecificQueryUri}\" ) ) ${graphEnd} } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_2}${defaultSeparator}${input_3}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:xLinksToNamespace xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${defaultHostAddress}linkstonamespace/${xmlEncoded_urlEncoded_input_1}/${xmlEncoded_urlEncoded_input_2}${defaultSeparator}${xmlEncoded_urlEncoded_input_3}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> , "2"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "2"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:unsafelinkstonamespace> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "unsafelinkstonamespace" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^linkstonamespace/([\\w-]+)/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> ?p ?o . } WHERE { ${graphStart} <${inputUrlEncoded_endpointSpecificUri}> ?p ?o . FILTER ( isUri(?o) && regex( str(?o), \"${ntriplesEncoded_endpointSpecificQueryUri}\" ) ) ${graphEnd} } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_2}${defaultSeparator}${input_3}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:xLinksToNamespace xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${defaultHostAddress}linkstonamespace/${xmlEncoded_urlEncoded_input_1}/${xmlEncoded_urlEncoded_input_2}${defaultSeparator}${xmlEncoded_urlEncoded_input_3}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> , "2"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "2"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:homepage> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "homepage" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^homepage/([\\w-]+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}homepage/${input_1}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}ns:${input_1}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedStandardUri}\"><ns0pred:homepageUrl xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_inputUrlEncoded_privateuppercase_normalisedQueryUri}</ns0pred:homepageUrl></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:lsidstandardinsertion> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "lsidstandardinsertion" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^urn:lsid:bio2rdf.org:([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "urn:lsid:bio2rdf.org:${input_1}:${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}:${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:xLsid xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:lsidstandardinsertion> .

<http://bio2rdf.org/query:license> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "license" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^license/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}license/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:rights xmlns:ns0pred=\"http://purl.org/dc/terms/\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:licenseendpoint> .

<http://bio2rdf.org/query:licenseendpoint> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "A direct reference to the endpoint without using a redirect URL" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}license/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:rights xmlns:ns0pred=\"http://purl.org/dc/terms/\" rdf:resource=\"${xmlEncoded_endpointUrl}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:licenseendpoint> .

<http://bio2rdf.org/query:plusurlencodedlicense> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "license" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^license/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}license/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputPlusUrlEncoded_normalisedStandardUri}\"><ns0pred:rights xmlns:ns0pred=\"http://purl.org/dc/terms/\" rdf:resource=\"${xmlEncoded_inputPlusUrlEncoded_normalisedQueryUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
    <http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:plusurlencodedlicenseendpoint> .

<http://bio2rdf.org/query:plusurlencodedlicenseendpoint> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "license" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputPlusUrlEncoded_normalisedStandardUri}\"><ns0pred:rights xmlns:ns0pred=\"http://purl.org/dc/terms/\" rdf:resource=\"${xmlEncoded_endpointUrl}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
    <http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:plusurlencodedlicenseendpoint> .


<http://bio2rdf.org/query:countlinks> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "countlinks" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^countlinks/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedQueryUri}> <http://bio2rdf.org/bio2rdf_resource:hasLinkCountResult> <${defaultHostAddress}linkresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_1}:${urlEncoded_input_2}> . <${defaultHostAddress}linkresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_1}:${urlEncoded_input_2}> <http://bio2rdf.org/bio2rdf_resource:sparqlEndpointUrl> <${endpointUrl}> .  <${defaultHostAddress}linkresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_1}:${urlEncoded_input_2}> <http://bio2rdf.org/bio2rdf_resource:sparqlGraphUri> \"${graphUri}\" . <${defaultHostAddress}linkresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_1}:${urlEncoded_input_2}> <http://bio2rdf.org/bio2rdf_resource:hasLinkCount> `(select (count(?s)) as ?countS where { ${graphStart} ?s ?p <${inputUrlEncoded_endpointSpecificUri}> . ${graphEnd} })` } where { ?s1 ?p1 ?o1 } limit 1" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}countlinks/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:xCountLinks xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:construct> , <http://bio2rdf.org/query:countlinks> .

<http://bio2rdf.org/query:virtuosobifcontainssearchbynamespace> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "virtuosobifcontainssearchbynamespace" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^searchns/([\\w-]+)/(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedQueryUri}> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://bio2rdf.org/bio2rdf_resource:SearchResults> . <${inputUrlEncoded_normalisedQueryUri}> <http://bio2rdf.org/bio2rdf_resource:hasSearchResult> ?s .  <${inputUrlEncoded_normalisedQueryUri}> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?s . ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . ?s <http://purl.org/dc/elements/1.1/title> ?title . ?s <http://purl.org/dc/terms/title> ?dctermstitle . ?s <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type . ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . ?s ?p ?o .  } WHERE { ${graphStart} ?s ?p ?o . FILTER(bif:contains(?o, '\"${ntriplesEncoded_input_2}\"')) OPTIONAL { ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . } OPTIONAL { ?s <http://purl.org/dc/elements/1.1/title> ?title . }  OPTIONAL{ ?s <http://purl.org/dc/terms/title> ?dctermstitle . }  OPTIONAL{ ?s <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type . } OPTIONAL { ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . } ${graphEnd} } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}searchns/${urlEncoded_input_1}/${urlEncoded_input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}searchns/${urlEncoded_input_1}/${urlEncoded_input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:hasGlobalSearch xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${defaultHostAddress}search/${xmlEncoded_urlEncoded_input_2}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:virtuosobifcontainssearchbynamespace> .

<http://bio2rdf.org/query:sparqlregexsearchbynamespace> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "sparqlregexsearchbynamespace" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^searchns/([\\w-]+)/(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedQueryUri}> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://bio2rdf.org/bio2rdf_resource:SearchResults> . <${inputUrlEncoded_normalisedQueryUri}> <http://bio2rdf.org/bio2rdf_resource:hasSearchResult> ?s .  <${inputUrlEncoded_normalisedQueryUri}> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?s . ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . ?s <http://purl.org/dc/elements/1.1/title> ?title . ?s <http://purl.org/dc/terms/title> ?dctermstitle . ?s <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type . ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . ?s ?p ?o .  } WHERE { ${graphStart} ?s ?p ?o . FILTER(regex(str(?o), \"${ntriplesEncoded_input_2}\")) OPTIONAL { ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label . } OPTIONAL { ?s <http://purl.org/dc/elements/1.1/title> ?title . } OPTIONAL{ ?s <http://purl.org/dc/terms/title> ?dctermstitle . } OPTIONAL{ ?s <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type . } OPTIONAL { ?s <http://www.w3.org/2004/02/skos/core#prefLabel> ?skoslabel . } ${graphEnd} } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}searchns/${urlEncoded_input_1}/${urlEncoded_input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}searchns/${urlEncoded_input_1}/${urlEncoded_input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:hasGlobalSearch xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${defaultHostAddress}search/${xmlEncoded_urlEncoded_input_2}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:sparqlregexsearchbynamespace> .

<http://bio2rdf.org/query:constructnoextras> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "constructnoextras" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^constructnoextras/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> ?p ?o . } WHERE { ${graphStart} <${inputUrlEncoded_endpointSpecificUri}> ?p ?o . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}constructnoextras/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:constructnoinclude> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "constructnoextras" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> ?p ?o . } WHERE { ${graphStart} <${inputUrlEncoded_endpointSpecificUri}> ?p ?o . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}constructnoextras/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:suppliers> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "suppliers" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^suppliers/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}suppliers/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:suppliers xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_inputUrlEncoded_normalisedQueryUri}</ns0pred:suppliers></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:taglabels> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "taglabels" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "PREFIX tags: <http://www.holygoat.co.uk/owl/redwood/0.1/tags/> PREFIX terms: <http://purl.org/net/terms#> CONSTRUCT { ?taggingInstance rdf:type terms:TermInstance . ?taggingInstance terms:subject <${inputUrlEncoded_normalisedStandardUri}> . ?taggingInstance terms:term ?tagLabelUri . ?tagLabelUri tags:name ?tagLabelName . } WHERE { ${graphStart} ?taggingInstance rdf:type terms:TermInstance . ?taggingInstance terms:taggedBy ?foafUser . ?taggingInstance terms:taggedOn ?taggedOn .         ?taggingInstance terms:subject <${inputUrlEncoded_endpointSpecificUri}> . OPTIONAL{ ?taggingInstance terms:predicate ?termPredicate .} OPTIONAL{?taggingInstance terms:object ?termObject .} ?taggingInstance terms:term ?tagLabelUri . ?tagLabelUri tags:name ?tagLabelName . FILTER(sameTerm(?foafUser, <http://purl.org/net/terms#AnonymousUser>)) ${graphEnd} } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:geneid> , <http://bio2rdf.org/ns:mquter_gene> , <http://bio2rdf.org/ns:go> , <http://bio2rdf.org/ns:keywords> , <http://bio2rdf.org/ns:term> , <http://bio2rdf.org/ns:terminstance> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:primaryreverseconstructfromdcidentifier> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "primaryreverseconstructfromdcidentifier" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> <http://bio2rdf.org/bio2rdf_resource:linkedToFrom> ?s . ?s ?p ?o} WHERE { ${graphStart} ?s <http://purl.org/dc/elements/1.1/identifier> \"${input_1}${defaultSeparator}${input_2}\" . ?s ?p ?o . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_endpointSpecificUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:primaryreverseconstructfromdcidentifier> .

<http://bio2rdf.org/query:primaryreverseconstructfromdoi> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "primaryreverseconstructfromdoi" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:doi> ;
 	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${normalisedStandardUri}> <http://bio2rdf.org/bio2rdf_resource:linkedToFrom> ?s . ?s ?p ?o} WHERE { ${graphStart} ?s <http://purl.org/ontology/bibo/doi> \"${input_2}\" . ?s ?p ?o . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_endpointSpecificUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:primaryreverseconstructfromdoi> .

<http://bio2rdf.org/query:primaryreverseconstructfromdoifornmrshiftdbspectrum> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "primaryreverseconstructfromdoifornmrshiftdbspectrum" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:doi> ;
 	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${normalisedStandardUri}> <http://bio2rdf.org/bio2rdf_resource:hasNMRSpectrum> ?spectrum . } WHERE { ${graphStart} ?bib <http://purl.org/ontology/bibo/doi> \"${input_2}\" . ?spectrum <http://purl.org/dc/elements/1.1/source> ?bib . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:sameAs xmlns:ns0pred=\"http://www.w3.org/2002/07/owl#\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_endpointSpecificUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:primaryreverseconstructfromdoifornmrshiftdbspectrum> .

<http://bio2rdf.org/query:counttriples> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "counttriples" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^counttriples/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedQueryUri}> <http://bio2rdf.org/bio2rdf_resource:hasTripleCountResult> <${defaultHostAddress}tripleresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_1}:${urlEncoded_input_2}> . <${defaultHostAddress}tripleresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_1}:${urlEncoded_input_2}> <http://bio2rdf.org/bio2rdf_resource:sparqlEndpointUrl> <${endpointUrl}> .  <${defaultHostAddress}tripleresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_1}:${urlEncoded_input_2}> <http://bio2rdf.org/bio2rdf_resource:sparqlGraphUri> \"${graphUri}\" . <${defaultHostAddress}tripleresultref/${urlEncoded_endpointUrl}/${urlEncoded_graphUri}/${urlEncoded_input_1}:${urlEncoded_input_2}> <http://bio2rdf.org/bio2rdf_resource:hasTripleCount> `(select (count(?o)) as ?countO where { ${graphStart} <${inputUrlEncoded_endpointSpecificUri}> ?p ?o . ${graphEnd} })` } where { ?s1 ?p1 ?o1 } limit 1" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}counttriples/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:xCountTriples xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\" rdf:resource=\"${xmlEncoded_inputUrlEncoded_normalisedQueryUri}\"/></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:construct> , <http://bio2rdf.org/query:counttriples> .

<http://bio2rdf.org/query:prosite2goconstruct> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "prosite2goconstruct" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "CONSTRUCT { <${inputUrlEncoded_normalisedStandardUri}> <http://bio2rdf.org/bio2rdf_resource:has_go_annotation> ?goAnnotation .  } WHERE {  ${graphStart}  ?goAnnotation <http://www.geneontology.org/formats/oboInOwl#hasDbXref> ?o . ?o <http://www.geneontology.org/formats/oboInOwl#hasURI> \"${inputUrlEncoded_endpointSpecificUri}\"^^xsd:anyURI . ${graphEnd}  } ${limit} ${sparqlOffset}" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "" ;
	<http://purl.org/queryall/query:inRobotsTxt> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:prosite> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:medline> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "medline" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^medline/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}medline/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:medlineUrl xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_inputUrlEncoded_normalisedQueryUri}</ns0pred:medlineUrl></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:pubmed> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> .

<http://bio2rdf.org/query:similardrugsbygeneid> a <http://purl.org/queryall/query:Query> ;
    <http://purl.org/queryall/query:isPageable> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/dc/elements/1.1/title> "similardrugsbygeneid" ;
	<http://purl.org/queryall/query:handleAllNamespaces> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:isNamespaceSpecific> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:namespaceMatchMethod> <http://purl.org/queryall/query:namespaceMatchAny> ;
	<http://purl.org/queryall/query:includeDefaults> "false"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/query:inputRegex> "^similardrugsbygeneid/([\\w-]+):(.+)" ;
	<http://purl.org/queryall/query:templateString> "" ;
	<http://purl.org/queryall/query:queryUriTemplateString> "${defaultHostAddress}similardrugsbygeneid/${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:standardUriTemplateString> "${defaultHostAddress}${input_1}${defaultSeparator}${input_2}" ;
	<http://purl.org/queryall/query:outputRdfXmlString> "<rdf:Description rdf:about=\"${xmlEncoded_inputUrlEncoded_normalisedStandardUri}\"><ns0pred:hasSimilarDrugsUrl xmlns:ns0pred=\"${defaultHostAddress}bio2rdf_resource:\">${xmlEncoded_inputUrlEncoded_normalisedQueryUri}</ns0pred:hasSimilarDrugsUrl></rdf:Description>" ;
	<http://purl.org/queryall/query:inRobotsTxt> "true"^^<http://www.w3.org/2001/XMLSchema#boolean> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> ;
	<http://purl.org/queryall/query:namespaceToHandle> <http://bio2rdf.org/ns:geneid> ;
	<http://purl.org/queryall/query:hasPublicIdentifierIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:hasNamespaceInputIndex> "1"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/query:includeQueryType> <http://bio2rdf.org/query:similardrugsbygeneid> .
	

