<http://bio2rdf.org/rdfrule:sparqlowlsameastrivialdelete> a <http://purl.org/queryall/rdfrule:NormalisationRule> , <http://purl.org/queryall/rdfrule:SparqlNormalisationRule> ;
    <http://purl.org/queryall/rdfrule:mode> <http://purl.org/queryall/rdfrule:onlyDeleteMatches> ;
    <http://purl.org/queryall/rdfrule:sparqlConstructQuery> "CONSTRUCT { ?myUri <http://www.w3.org/2002/07/owl#sameAs> ?myUri . } WHERE { ?myUri <http://www.w3.org/2002/07/owl#sameAs> ?myUri . }" ;
	<http://purl.org/queryall/rdfrule:stage> <http://purl.org/queryall/rdfrule:afterResultsToPool> ;
	<http://purl.org/queryall/rdfrule:description> "Deletes trivial owl:sameAs rdf triples that are generated by some providers" ;
	<http://purl.org/queryall/rdfrule:order> "100"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> .

<http://bio2rdf.org/rdfrule:removeemptynamespaceucscuris> a <http://purl.org/queryall/rdfrule:NormalisationRule> , <http://purl.org/queryall/rdfrule:SparqlNormalisationRule> ;
    <http://purl.org/queryall/rdfrule:mode> <http://purl.org/queryall/rdfrule:onlyDeleteMatches> ;
    <http://purl.org/queryall/rdfrule:sparqlConstructQuery> "CONSTRUCT { ?myUri ?property <http://bio2rdf.org/ucsc:> . } WHERE { ?myUri ?property <http://bio2rdf.org/ucsc:> . }" ;
	<http://purl.org/queryall/rdfrule:stage> <http://purl.org/queryall/rdfrule:afterResultsToPool> ;
	<http://purl.org/queryall/rdfrule:description> "Deletes statements that include the empty URI http://bio2rdf.org/ucsc: due to broken RDF generation scripts" ;
	<http://purl.org/queryall/rdfrule:order> "100"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> .


<http://bio2rdf.org/rdfrule:sparqllinkedtofromunretrievedblanknoderemoval> a <http://purl.org/queryall/rdfrule:NormalisationRule> , <http://purl.org/queryall/rdfrule:SparqlNormalisationRule> ;
    <http://purl.org/queryall/rdfrule:mode> <http://purl.org/queryall/rdfrule:onlyDeleteMatches> ;
    <http://purl.org/queryall/rdfrule:sparqlConstructQuery> "CONSTRUCT { ?myUri <http://bio2rdf.org/bio2rdf_resource:linkedToFrom> ?blanknode . } WHERE { ?myUri <http://bio2rdf.org/bio2rdf_resource:linkedToFrom> ?blanknode . FILTER(isBlank(?blanknode)) OPTIONAL { ?blanknode ?pred ?obj } .
         FILTER (!bound(?obj)) }" ;
	<http://purl.org/queryall/rdfrule:stage> <http://purl.org/queryall/rdfrule:afterResultsToPool> ;
	<http://purl.org/queryall/rdfrule:description> "Deletes references to blank nodes that were created using the linkedToFrom rule if there is no other information about the blank node, as it is completely useless in these cases." ;
	<http://purl.org/queryall/rdfrule:order> "100"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> .
 
<http://bio2rdf.org/rdfrule:sparqlobodbxrefunretrievedblanknoderemoval> a <http://purl.org/queryall/rdfrule:NormalisationRule> , <http://purl.org/queryall/rdfrule:SparqlNormalisationRule> ;
    <http://purl.org/queryall/rdfrule:mode> <http://purl.org/queryall/rdfrule:onlyDeleteMatches> ;
    <http://purl.org/queryall/rdfrule:sparqlConstructQuery> "CONSTRUCT { ?myUri <http://bio2rdf.org/obo_resource:dbxref> ?blanknode . } WHERE { ?myUri <http://bio2rdf.org/obo_resource:dbxref> ?blanknode . FILTER(isBlank(?blanknode)) OPTIONAL { ?blanknode ?pred ?obj } .
         FILTER (!bound(?obj)) }" ;
	<http://purl.org/queryall/rdfrule:stage> <http://purl.org/queryall/rdfrule:afterResultsToPool> ;
	<http://purl.org/queryall/rdfrule:description> "Deletes references to blank nodes that were in OBO as dbxrefs rule if there is no other information about the blank node, as it is completely useless in these cases." ;
	<http://purl.org/queryall/rdfrule:order> "100"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> .

<http://bio2rdf.org/rdfrule:sparqlownequivalentclassblanknoderemoval> a <http://purl.org/queryall/rdfrule:NormalisationRule> , <http://purl.org/queryall/rdfrule:SparqlNormalisationRule> ;
    <http://purl.org/queryall/rdfrule:mode> <http://purl.org/queryall/rdfrule:onlyDeleteMatches> ;
    <http://purl.org/queryall/rdfrule:sparqlConstructQuery> "CONSTRUCT { ?myUri <http://www.w3.org/2002/07/owl#equivalentClass> ?blanknode . } WHERE { ?myUri <http://www.w3.org/2002/07/owl#equivalentClass> ?blanknode . FILTER(isBlank(?blanknode)) OPTIONAL { ?blanknode ?pred ?obj } .
         FILTER (!bound(?obj)) }" ;
	<http://purl.org/queryall/rdfrule:stage> <http://purl.org/queryall/rdfrule:afterResultsToPool> ;
	<http://purl.org/queryall/rdfrule:description> "Deletes references to blank nodes that were in OBO as dbxrefs rule if there is no other information about the blank node, as it is completely useless in these cases." ;
	<http://purl.org/queryall/rdfrule:order> "100"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> .

 
<http://bio2rdf.org/rdfrule:sparqlremoveplaintextemailaddresses> a <http://purl.org/queryall/rdfrule:NormalisationRule> , <http://purl.org/queryall/rdfrule:SparqlNormalisationRule> ;
    <http://purl.org/queryall/rdfrule:mode> <http://purl.org/queryall/rdfrule:onlyDeleteMatches> ;
    <http://purl.org/queryall/rdfrule:sparqlConstructQuery> "CONSTRUCT { ?myUri <http://xmlns.com/foaf/0.1/mbox> ?email . } WHERE { ?myUri <http://xmlns.com/foaf/0.1/mbox> ?email . FILTER(REGEX(str(?email), \"mailto:.*\") || REGEX(str(?email), \".*@.*\") ) }" ;
	<http://purl.org/queryall/rdfrule:stage> <http://purl.org/queryall/rdfrule:afterResultsToPool> ;
	<http://purl.org/queryall/rdfrule:description> "Remove plain text email addresses that are marked up using the FOAF mbox predicate so that they can't be harvested by spammers." ;
	<http://purl.org/queryall/rdfrule:order> "100"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> .

<http://bio2rdf.org/rdfrule:sparqlremovelsid> a <http://purl.org/queryall/rdfrule:NormalisationRule> , <http://purl.org/queryall/rdfrule:SparqlNormalisationRule> ;
    <http://purl.org/queryall/rdfrule:mode> <http://purl.org/queryall/rdfrule:onlyDeleteMatches> ;
    <http://purl.org/queryall/rdfrule:sparqlConstructQuery> "CONSTRUCT { ?myUri <http://bio2rdf.org/bio2rdf_resource:lsid> ?lsid . } WHERE { ?myUri <http://bio2rdf.org/bio2rdf_resource:lsid> ?lsid . }" ;
	<http://purl.org/queryall/rdfrule:stage> <http://purl.org/queryall/rdfrule:afterResultsToPool> ;
	<http://purl.org/queryall/rdfrule:description> "Remove LSID links" ;
	<http://purl.org/queryall/rdfrule:order> "100"^^<http://www.w3.org/2001/XMLSchema#int> ;
	<http://purl.org/queryall/profile:profileIncludeExcludeOrder> <http://purl.org/queryall/profile:excludeThenInclude> .


